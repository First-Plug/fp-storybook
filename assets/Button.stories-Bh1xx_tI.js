import{j as J}from"./jsx-runtime-D_zvdyIk.js";import{r as C}from"./index-D4lIrffr.js";import{a as ct,c as xt}from"./createLucideIcon-BNPQLea_.js";import{a as A}from"./index-B-lxVbXh.js";import{w as T,e as f,u as D}from"./index-BZkcKs8Z.js";import"./v4-CtRu48qb.js";function Be(e,o){if(typeof e=="function")return e(o);e!=null&&(e.current=o)}function kt(...e){return o=>{let t=!1;const r=e.map(n=>{const i=Be(n,o);return!t&&typeof i=="function"&&(t=!0),i});if(t)return()=>{for(let n=0;n<r.length;n++){const i=r[n];typeof i=="function"?i():Be(e[n],null)}}}}function Ct(e){const o=St(e),t=C.forwardRef((r,n)=>{const{children:i,...l}=r,m=C.Children.toArray(i),u=m.find(Et);if(u){const b=u.props.children,g=m.map(y=>y===u?C.Children.count(b)>1?C.Children.only(null):C.isValidElement(b)?b.props.children:null:y);return J.jsx(o,{...l,ref:n,children:C.isValidElement(b)?C.cloneElement(b,void 0,g):null})}return J.jsx(o,{...l,ref:n,children:i})});return t.displayName=`${e}.Slot`,t}var zt=Ct("Slot");function St(e){const o=C.forwardRef((t,r)=>{const{children:n,...i}=t;if(C.isValidElement(n)){const l=Bt(n),m=It(i,n.props);return n.type!==C.Fragment&&(m.ref=r?kt(r,l):l),C.cloneElement(n,m)}return C.Children.count(n)>1?C.Children.only(null):null});return o.displayName=`${e}.SlotClone`,o}var Rt=Symbol("radix.slottable");function Et(e){return C.isValidElement(e)&&typeof e.type=="function"&&"__radixId"in e.type&&e.type.__radixId===Rt}function It(e,o){const t={...o};for(const r in o){const n=e[r],i=o[r];/^on[A-Z]/.test(r)?n&&i?t[r]=(...m)=>{i(...m),n(...m)}:n&&(t[r]=n):r==="style"?t[r]={...n,...i}:r==="className"&&(t[r]=[n,i].filter(Boolean).join(" "))}return{...e,...t}}function Bt(e){var r,n;let o=(r=Object.getOwnPropertyDescriptor(e.props,"ref"))==null?void 0:r.get,t=o&&"isReactWarning"in o&&o.isReactWarning;return t?e.ref:(o=(n=Object.getOwnPropertyDescriptor(e,"ref"))==null?void 0:n.get,t=o&&"isReactWarning"in o&&o.isReactWarning,t?e.props.ref:e.props.ref||e.ref)}const Ae=e=>typeof e=="boolean"?`${e}`:e===0?"0":e,Te=ct,At=(e,o)=>t=>{var r;if((o==null?void 0:o.variants)==null)return Te(e,t==null?void 0:t.class,t==null?void 0:t.className);const{variants:n,defaultVariants:i}=o,l=Object.keys(n).map(b=>{const g=t==null?void 0:t[b],y=i==null?void 0:i[b];if(g===null)return null;const S=Ae(g)||Ae(y);return n[b][S]}),m=t&&Object.entries(t).reduce((b,g)=>{let[y,S]=g;return S===void 0||(b[y]=S),b},{}),u=o==null||(r=o.compoundVariants)===null||r===void 0?void 0:r.reduce((b,g)=>{let{class:y,className:S,...M}=g;return Object.entries(M).every(x=>{let[k,R]=x;return Array.isArray(R)?R.includes({...i,...m}[k]):{...i,...m}[k]===R})?[...b,y,S]:b},[]);return Te(e,l,u,t==null?void 0:t.class,t==null?void 0:t.className)},we="-",Tt=e=>{const o=Mt(e),{conflictingClassGroups:t,conflictingClassGroupModifiers:r}=e;return{getClassGroupId:l=>{const m=l.split(we);return m[0]===""&&m.length!==1&&m.shift(),dt(m,o)||Pt(l)},getConflictingClassGroupIds:(l,m)=>{const u=t[l]||[];return m&&r[l]?[...u,...r[l]]:u}}},dt=(e,o)=>{var l;if(e.length===0)return o.classGroupId;const t=e[0],r=o.nextPart.get(t),n=r?dt(e.slice(1),r):void 0;if(n)return n;if(o.validators.length===0)return;const i=e.join(we);return(l=o.validators.find(({validator:m})=>m(i)))==null?void 0:l.classGroupId},Pe=/^\[(.+)\]$/,Pt=e=>{if(Pe.test(e)){const o=Pe.exec(e)[1],t=o==null?void 0:o.substring(0,o.indexOf(":"));if(t)return"arbitrary.."+t}},Mt=e=>{const{theme:o,classGroups:t}=e,r={nextPart:new Map,validators:[]};for(const n in t)he(t[n],r,n,o);return r},he=(e,o,t,r)=>{e.forEach(n=>{if(typeof n=="string"){const i=n===""?o:Me(o,n);i.classGroupId=t;return}if(typeof n=="function"){if(Vt(n)){he(n(r),o,t,r);return}o.validators.push({validator:n,classGroupId:t});return}Object.entries(n).forEach(([i,l])=>{he(l,Me(o,i),t,r)})})},Me=(e,o)=>{let t=e;return o.split(we).forEach(r=>{t.nextPart.has(r)||t.nextPart.set(r,{nextPart:new Map,validators:[]}),t=t.nextPart.get(r)}),t},Vt=e=>e.isThemeGetter,jt=e=>{if(e<1)return{get:()=>{},set:()=>{}};let o=0,t=new Map,r=new Map;const n=(i,l)=>{t.set(i,l),o++,o>e&&(o=0,r=t,t=new Map)};return{get(i){let l=t.get(i);if(l!==void 0)return l;if((l=r.get(i))!==void 0)return n(i,l),l},set(i,l){t.has(i)?t.set(i,l):n(i,l)}}},ve="!",ye=":",Nt=ye.length,Gt=e=>{const{prefix:o,experimentalParseClassName:t}=e;let r=n=>{const i=[];let l=0,m=0,u=0,b;for(let x=0;x<n.length;x++){let k=n[x];if(l===0&&m===0){if(k===ye){i.push(n.slice(u,x)),u=x+Nt;continue}if(k==="/"){b=x;continue}}k==="["?l++:k==="]"?l--:k==="("?m++:k===")"&&m--}const g=i.length===0?n:n.substring(u),y=Dt(g),S=y!==g,M=b&&b>u?b-u:void 0;return{modifiers:i,hasImportantModifier:S,baseClassName:y,maybePostfixModifierPosition:M}};if(o){const n=o+ye,i=r;r=l=>l.startsWith(n)?i(l.substring(n.length)):{isExternal:!0,modifiers:[],hasImportantModifier:!1,baseClassName:l,maybePostfixModifierPosition:void 0}}if(t){const n=r;r=i=>t({className:i,parseClassName:n})}return r},Dt=e=>e.endsWith(ve)?e.substring(0,e.length-1):e.startsWith(ve)?e.substring(1):e,_t=e=>{const o=Object.fromEntries(e.orderSensitiveModifiers.map(r=>[r,!0]));return r=>{if(r.length<=1)return r;const n=[];let i=[];return r.forEach(l=>{l[0]==="["||o[l]?(n.push(...i.sort(),l),i=[]):i.push(l)}),n.push(...i.sort()),n}},Ht=e=>({cache:jt(e.cacheSize),parseClassName:Gt(e),sortModifiers:_t(e),...Tt(e)}),Ot=/\s+/,Lt=(e,o)=>{const{parseClassName:t,getClassGroupId:r,getConflictingClassGroupIds:n,sortModifiers:i}=o,l=[],m=e.trim().split(Ot);let u="";for(let b=m.length-1;b>=0;b-=1){const g=m[b],{isExternal:y,modifiers:S,hasImportantModifier:M,baseClassName:x,maybePostfixModifierPosition:k}=t(g);if(y){u=g+(u.length>0?" "+u:u);continue}let R=!!k,V=r(R?x.substring(0,k):x);if(!V){if(!R){u=g+(u.length>0?" "+u:u);continue}if(V=r(x),!V){u=g+(u.length>0?" "+u:u);continue}R=!1}const K=i(S).join(":"),$=M?K+ve:K,_=$+V;if(l.includes(_))continue;l.push(_);const H=n(V,R);for(let j=0;j<H.length;++j){const q=H[j];l.push($+q)}u=g+(u.length>0?" "+u:u)}return u};function Wt(){let e=0,o,t,r="";for(;e<arguments.length;)(o=arguments[e++])&&(t=ut(o))&&(r&&(r+=" "),r+=t);return r}const ut=e=>{if(typeof e=="string")return e;let o,t="";for(let r=0;r<e.length;r++)e[r]&&(o=ut(e[r]))&&(t&&(t+=" "),t+=o);return t};function Ft(e,...o){let t,r,n,i=l;function l(u){const b=o.reduce((g,y)=>y(g),e());return t=Ht(b),r=t.cache.get,n=t.cache.set,i=m,m(u)}function m(u){const b=r(u);if(b)return b;const g=Lt(u,t);return n(u,g),g}return function(){return i(Wt.apply(null,arguments))}}const h=e=>{const o=t=>t[e]||[];return o.isThemeGetter=!0,o},mt=/^\[(?:(\w[\w-]*):)?(.+)\]$/i,pt=/^\((?:(\w[\w-]*):)?(.+)\)$/i,$t=/^\d+\/\d+$/,qt=/^(\d+(\.\d+)?)?(xs|sm|md|lg|xl)$/,Ut=/\d+(%|px|r?em|[sdl]?v([hwib]|min|max)|pt|pc|in|cm|mm|cap|ch|ex|r?lh|cq(w|h|i|b|min|max))|\b(calc|min|max|clamp)\(.+\)|^0$/,Jt=/^(rgba?|hsla?|hwb|(ok)?(lab|lch))\(.+\)$/,Kt=/^(inset_)?-?((\d+)?\.?(\d+)[a-z]+|0)_-?((\d+)?\.?(\d+)[a-z]+|0)/,Xt=/^(url|image|image-set|cross-fade|element|(repeating-)?(linear|radial|conic)-gradient)\(.+\)$/,L=e=>$t.test(e),p=e=>!!e&&!Number.isNaN(Number(e)),P=e=>!!e&&Number.isInteger(Number(e)),ge=e=>e.endsWith("%")&&p(e.slice(0,-1)),B=e=>qt.test(e),Zt=()=>!0,Qt=e=>Ut.test(e)&&!Jt.test(e),bt=()=>!1,Yt=e=>Kt.test(e),eo=e=>Xt.test(e),to=e=>!a(e)&&!s(e),oo=e=>W(e,ht,bt),a=e=>mt.test(e),G=e=>W(e,vt,Qt),fe=e=>W(e,io,p),Ve=e=>W(e,gt,bt),ro=e=>W(e,ft,eo),te=e=>W(e,yt,Yt),s=e=>pt.test(e),U=e=>F(e,vt),no=e=>F(e,lo),je=e=>F(e,gt),ao=e=>F(e,ht),so=e=>F(e,ft),oe=e=>F(e,yt,!0),W=(e,o,t)=>{const r=mt.exec(e);return r?r[1]?o(r[1]):t(r[2]):!1},F=(e,o,t=!1)=>{const r=pt.exec(e);return r?r[1]?o(r[1]):t:!1},gt=e=>e==="position"||e==="percentage",ft=e=>e==="image"||e==="url",ht=e=>e==="length"||e==="size"||e==="bg-size",vt=e=>e==="length",io=e=>e==="number",lo=e=>e==="family-name",yt=e=>e==="shadow",co=()=>{const e=h("color"),o=h("font"),t=h("text"),r=h("font-weight"),n=h("tracking"),i=h("leading"),l=h("breakpoint"),m=h("container"),u=h("spacing"),b=h("radius"),g=h("shadow"),y=h("inset-shadow"),S=h("text-shadow"),M=h("drop-shadow"),x=h("blur"),k=h("perspective"),R=h("aspect"),V=h("ease"),K=h("animate"),$=()=>["auto","avoid","all","avoid-page","page","left","right","column"],_=()=>["center","top","bottom","left","right","top-left","left-top","top-right","right-top","bottom-right","right-bottom","bottom-left","left-bottom"],H=()=>[..._(),s,a],j=()=>["auto","hidden","clip","visible","scroll"],q=()=>["auto","contain","none"],d=()=>[s,a,u],E=()=>[L,"full","auto",...d()],xe=()=>[P,"none","subgrid",s,a],ke=()=>["auto",{span:["full",P,s,a]},P,s,a],X=()=>[P,"auto",s,a],Ce=()=>["auto","min","max","fr",s,a],me=()=>["start","end","center","between","around","evenly","stretch","baseline","center-safe","end-safe"],O=()=>["start","end","center","stretch","center-safe","end-safe"],I=()=>["auto",...d()],N=()=>[L,"auto","full","dvw","dvh","lvw","lvh","svw","svh","min","max","fit",...d()],c=()=>[e,s,a],ze=()=>[..._(),je,Ve,{position:[s,a]}],Se=()=>["no-repeat",{repeat:["","x","y","space","round"]}],Re=()=>["auto","cover","contain",ao,oo,{size:[s,a]}],pe=()=>[ge,U,G],w=()=>["","none","full",b,s,a],z=()=>["",p,U,G],Z=()=>["solid","dashed","dotted","double"],Ee=()=>["normal","multiply","screen","overlay","darken","lighten","color-dodge","color-burn","hard-light","soft-light","difference","exclusion","hue","saturation","color","luminosity"],v=()=>[p,ge,je,Ve],Ie=()=>["","none",x,s,a],Q=()=>["none",p,s,a],Y=()=>["none",p,s,a],be=()=>[p,s,a],ee=()=>[L,"full",...d()];return{cacheSize:500,theme:{animate:["spin","ping","pulse","bounce"],aspect:["video"],blur:[B],breakpoint:[B],color:[Zt],container:[B],"drop-shadow":[B],ease:["in","out","in-out"],font:[to],"font-weight":["thin","extralight","light","normal","medium","semibold","bold","extrabold","black"],"inset-shadow":[B],leading:["none","tight","snug","normal","relaxed","loose"],perspective:["dramatic","near","normal","midrange","distant","none"],radius:[B],shadow:[B],spacing:["px",p],text:[B],"text-shadow":[B],tracking:["tighter","tight","normal","wide","wider","widest"]},classGroups:{aspect:[{aspect:["auto","square",L,a,s,R]}],container:["container"],columns:[{columns:[p,a,s,m]}],"break-after":[{"break-after":$()}],"break-before":[{"break-before":$()}],"break-inside":[{"break-inside":["auto","avoid","avoid-page","avoid-column"]}],"box-decoration":[{"box-decoration":["slice","clone"]}],box:[{box:["border","content"]}],display:["block","inline-block","inline","flex","inline-flex","table","inline-table","table-caption","table-cell","table-column","table-column-group","table-footer-group","table-header-group","table-row-group","table-row","flow-root","grid","inline-grid","contents","list-item","hidden"],sr:["sr-only","not-sr-only"],float:[{float:["right","left","none","start","end"]}],clear:[{clear:["left","right","both","none","start","end"]}],isolation:["isolate","isolation-auto"],"object-fit":[{object:["contain","cover","fill","none","scale-down"]}],"object-position":[{object:H()}],overflow:[{overflow:j()}],"overflow-x":[{"overflow-x":j()}],"overflow-y":[{"overflow-y":j()}],overscroll:[{overscroll:q()}],"overscroll-x":[{"overscroll-x":q()}],"overscroll-y":[{"overscroll-y":q()}],position:["static","fixed","absolute","relative","sticky"],inset:[{inset:E()}],"inset-x":[{"inset-x":E()}],"inset-y":[{"inset-y":E()}],start:[{start:E()}],end:[{end:E()}],top:[{top:E()}],right:[{right:E()}],bottom:[{bottom:E()}],left:[{left:E()}],visibility:["visible","invisible","collapse"],z:[{z:[P,"auto",s,a]}],basis:[{basis:[L,"full","auto",m,...d()]}],"flex-direction":[{flex:["row","row-reverse","col","col-reverse"]}],"flex-wrap":[{flex:["nowrap","wrap","wrap-reverse"]}],flex:[{flex:[p,L,"auto","initial","none",a]}],grow:[{grow:["",p,s,a]}],shrink:[{shrink:["",p,s,a]}],order:[{order:[P,"first","last","none",s,a]}],"grid-cols":[{"grid-cols":xe()}],"col-start-end":[{col:ke()}],"col-start":[{"col-start":X()}],"col-end":[{"col-end":X()}],"grid-rows":[{"grid-rows":xe()}],"row-start-end":[{row:ke()}],"row-start":[{"row-start":X()}],"row-end":[{"row-end":X()}],"grid-flow":[{"grid-flow":["row","col","dense","row-dense","col-dense"]}],"auto-cols":[{"auto-cols":Ce()}],"auto-rows":[{"auto-rows":Ce()}],gap:[{gap:d()}],"gap-x":[{"gap-x":d()}],"gap-y":[{"gap-y":d()}],"justify-content":[{justify:[...me(),"normal"]}],"justify-items":[{"justify-items":[...O(),"normal"]}],"justify-self":[{"justify-self":["auto",...O()]}],"align-content":[{content:["normal",...me()]}],"align-items":[{items:[...O(),{baseline:["","last"]}]}],"align-self":[{self:["auto",...O(),{baseline:["","last"]}]}],"place-content":[{"place-content":me()}],"place-items":[{"place-items":[...O(),"baseline"]}],"place-self":[{"place-self":["auto",...O()]}],p:[{p:d()}],px:[{px:d()}],py:[{py:d()}],ps:[{ps:d()}],pe:[{pe:d()}],pt:[{pt:d()}],pr:[{pr:d()}],pb:[{pb:d()}],pl:[{pl:d()}],m:[{m:I()}],mx:[{mx:I()}],my:[{my:I()}],ms:[{ms:I()}],me:[{me:I()}],mt:[{mt:I()}],mr:[{mr:I()}],mb:[{mb:I()}],ml:[{ml:I()}],"space-x":[{"space-x":d()}],"space-x-reverse":["space-x-reverse"],"space-y":[{"space-y":d()}],"space-y-reverse":["space-y-reverse"],size:[{size:N()}],w:[{w:[m,"screen",...N()]}],"min-w":[{"min-w":[m,"screen","none",...N()]}],"max-w":[{"max-w":[m,"screen","none","prose",{screen:[l]},...N()]}],h:[{h:["screen",...N()]}],"min-h":[{"min-h":["screen","none",...N()]}],"max-h":[{"max-h":["screen",...N()]}],"font-size":[{text:["base",t,U,G]}],"font-smoothing":["antialiased","subpixel-antialiased"],"font-style":["italic","not-italic"],"font-weight":[{font:[r,s,fe]}],"font-stretch":[{"font-stretch":["ultra-condensed","extra-condensed","condensed","semi-condensed","normal","semi-expanded","expanded","extra-expanded","ultra-expanded",ge,a]}],"font-family":[{font:[no,a,o]}],"fvn-normal":["normal-nums"],"fvn-ordinal":["ordinal"],"fvn-slashed-zero":["slashed-zero"],"fvn-figure":["lining-nums","oldstyle-nums"],"fvn-spacing":["proportional-nums","tabular-nums"],"fvn-fraction":["diagonal-fractions","stacked-fractions"],tracking:[{tracking:[n,s,a]}],"line-clamp":[{"line-clamp":[p,"none",s,fe]}],leading:[{leading:[i,...d()]}],"list-image":[{"list-image":["none",s,a]}],"list-style-position":[{list:["inside","outside"]}],"list-style-type":[{list:["disc","decimal","none",s,a]}],"text-alignment":[{text:["left","center","right","justify","start","end"]}],"placeholder-color":[{placeholder:c()}],"text-color":[{text:c()}],"text-decoration":["underline","overline","line-through","no-underline"],"text-decoration-style":[{decoration:[...Z(),"wavy"]}],"text-decoration-thickness":[{decoration:[p,"from-font","auto",s,G]}],"text-decoration-color":[{decoration:c()}],"underline-offset":[{"underline-offset":[p,"auto",s,a]}],"text-transform":["uppercase","lowercase","capitalize","normal-case"],"text-overflow":["truncate","text-ellipsis","text-clip"],"text-wrap":[{text:["wrap","nowrap","balance","pretty"]}],indent:[{indent:d()}],"vertical-align":[{align:["baseline","top","middle","bottom","text-top","text-bottom","sub","super",s,a]}],whitespace:[{whitespace:["normal","nowrap","pre","pre-line","pre-wrap","break-spaces"]}],break:[{break:["normal","words","all","keep"]}],wrap:[{wrap:["break-word","anywhere","normal"]}],hyphens:[{hyphens:["none","manual","auto"]}],content:[{content:["none",s,a]}],"bg-attachment":[{bg:["fixed","local","scroll"]}],"bg-clip":[{"bg-clip":["border","padding","content","text"]}],"bg-origin":[{"bg-origin":["border","padding","content"]}],"bg-position":[{bg:ze()}],"bg-repeat":[{bg:Se()}],"bg-size":[{bg:Re()}],"bg-image":[{bg:["none",{linear:[{to:["t","tr","r","br","b","bl","l","tl"]},P,s,a],radial:["",s,a],conic:[P,s,a]},so,ro]}],"bg-color":[{bg:c()}],"gradient-from-pos":[{from:pe()}],"gradient-via-pos":[{via:pe()}],"gradient-to-pos":[{to:pe()}],"gradient-from":[{from:c()}],"gradient-via":[{via:c()}],"gradient-to":[{to:c()}],rounded:[{rounded:w()}],"rounded-s":[{"rounded-s":w()}],"rounded-e":[{"rounded-e":w()}],"rounded-t":[{"rounded-t":w()}],"rounded-r":[{"rounded-r":w()}],"rounded-b":[{"rounded-b":w()}],"rounded-l":[{"rounded-l":w()}],"rounded-ss":[{"rounded-ss":w()}],"rounded-se":[{"rounded-se":w()}],"rounded-ee":[{"rounded-ee":w()}],"rounded-es":[{"rounded-es":w()}],"rounded-tl":[{"rounded-tl":w()}],"rounded-tr":[{"rounded-tr":w()}],"rounded-br":[{"rounded-br":w()}],"rounded-bl":[{"rounded-bl":w()}],"border-w":[{border:z()}],"border-w-x":[{"border-x":z()}],"border-w-y":[{"border-y":z()}],"border-w-s":[{"border-s":z()}],"border-w-e":[{"border-e":z()}],"border-w-t":[{"border-t":z()}],"border-w-r":[{"border-r":z()}],"border-w-b":[{"border-b":z()}],"border-w-l":[{"border-l":z()}],"divide-x":[{"divide-x":z()}],"divide-x-reverse":["divide-x-reverse"],"divide-y":[{"divide-y":z()}],"divide-y-reverse":["divide-y-reverse"],"border-style":[{border:[...Z(),"hidden","none"]}],"divide-style":[{divide:[...Z(),"hidden","none"]}],"border-color":[{border:c()}],"border-color-x":[{"border-x":c()}],"border-color-y":[{"border-y":c()}],"border-color-s":[{"border-s":c()}],"border-color-e":[{"border-e":c()}],"border-color-t":[{"border-t":c()}],"border-color-r":[{"border-r":c()}],"border-color-b":[{"border-b":c()}],"border-color-l":[{"border-l":c()}],"divide-color":[{divide:c()}],"outline-style":[{outline:[...Z(),"none","hidden"]}],"outline-offset":[{"outline-offset":[p,s,a]}],"outline-w":[{outline:["",p,U,G]}],"outline-color":[{outline:c()}],shadow:[{shadow:["","none",g,oe,te]}],"shadow-color":[{shadow:c()}],"inset-shadow":[{"inset-shadow":["none",y,oe,te]}],"inset-shadow-color":[{"inset-shadow":c()}],"ring-w":[{ring:z()}],"ring-w-inset":["ring-inset"],"ring-color":[{ring:c()}],"ring-offset-w":[{"ring-offset":[p,G]}],"ring-offset-color":[{"ring-offset":c()}],"inset-ring-w":[{"inset-ring":z()}],"inset-ring-color":[{"inset-ring":c()}],"text-shadow":[{"text-shadow":["none",S,oe,te]}],"text-shadow-color":[{"text-shadow":c()}],opacity:[{opacity:[p,s,a]}],"mix-blend":[{"mix-blend":[...Ee(),"plus-darker","plus-lighter"]}],"bg-blend":[{"bg-blend":Ee()}],"mask-clip":[{"mask-clip":["border","padding","content","fill","stroke","view"]},"mask-no-clip"],"mask-composite":[{mask:["add","subtract","intersect","exclude"]}],"mask-image-linear-pos":[{"mask-linear":[p]}],"mask-image-linear-from-pos":[{"mask-linear-from":v()}],"mask-image-linear-to-pos":[{"mask-linear-to":v()}],"mask-image-linear-from-color":[{"mask-linear-from":c()}],"mask-image-linear-to-color":[{"mask-linear-to":c()}],"mask-image-t-from-pos":[{"mask-t-from":v()}],"mask-image-t-to-pos":[{"mask-t-to":v()}],"mask-image-t-from-color":[{"mask-t-from":c()}],"mask-image-t-to-color":[{"mask-t-to":c()}],"mask-image-r-from-pos":[{"mask-r-from":v()}],"mask-image-r-to-pos":[{"mask-r-to":v()}],"mask-image-r-from-color":[{"mask-r-from":c()}],"mask-image-r-to-color":[{"mask-r-to":c()}],"mask-image-b-from-pos":[{"mask-b-from":v()}],"mask-image-b-to-pos":[{"mask-b-to":v()}],"mask-image-b-from-color":[{"mask-b-from":c()}],"mask-image-b-to-color":[{"mask-b-to":c()}],"mask-image-l-from-pos":[{"mask-l-from":v()}],"mask-image-l-to-pos":[{"mask-l-to":v()}],"mask-image-l-from-color":[{"mask-l-from":c()}],"mask-image-l-to-color":[{"mask-l-to":c()}],"mask-image-x-from-pos":[{"mask-x-from":v()}],"mask-image-x-to-pos":[{"mask-x-to":v()}],"mask-image-x-from-color":[{"mask-x-from":c()}],"mask-image-x-to-color":[{"mask-x-to":c()}],"mask-image-y-from-pos":[{"mask-y-from":v()}],"mask-image-y-to-pos":[{"mask-y-to":v()}],"mask-image-y-from-color":[{"mask-y-from":c()}],"mask-image-y-to-color":[{"mask-y-to":c()}],"mask-image-radial":[{"mask-radial":[s,a]}],"mask-image-radial-from-pos":[{"mask-radial-from":v()}],"mask-image-radial-to-pos":[{"mask-radial-to":v()}],"mask-image-radial-from-color":[{"mask-radial-from":c()}],"mask-image-radial-to-color":[{"mask-radial-to":c()}],"mask-image-radial-shape":[{"mask-radial":["circle","ellipse"]}],"mask-image-radial-size":[{"mask-radial":[{closest:["side","corner"],farthest:["side","corner"]}]}],"mask-image-radial-pos":[{"mask-radial-at":_()}],"mask-image-conic-pos":[{"mask-conic":[p]}],"mask-image-conic-from-pos":[{"mask-conic-from":v()}],"mask-image-conic-to-pos":[{"mask-conic-to":v()}],"mask-image-conic-from-color":[{"mask-conic-from":c()}],"mask-image-conic-to-color":[{"mask-conic-to":c()}],"mask-mode":[{mask:["alpha","luminance","match"]}],"mask-origin":[{"mask-origin":["border","padding","content","fill","stroke","view"]}],"mask-position":[{mask:ze()}],"mask-repeat":[{mask:Se()}],"mask-size":[{mask:Re()}],"mask-type":[{"mask-type":["alpha","luminance"]}],"mask-image":[{mask:["none",s,a]}],filter:[{filter:["","none",s,a]}],blur:[{blur:Ie()}],brightness:[{brightness:[p,s,a]}],contrast:[{contrast:[p,s,a]}],"drop-shadow":[{"drop-shadow":["","none",M,oe,te]}],"drop-shadow-color":[{"drop-shadow":c()}],grayscale:[{grayscale:["",p,s,a]}],"hue-rotate":[{"hue-rotate":[p,s,a]}],invert:[{invert:["",p,s,a]}],saturate:[{saturate:[p,s,a]}],sepia:[{sepia:["",p,s,a]}],"backdrop-filter":[{"backdrop-filter":["","none",s,a]}],"backdrop-blur":[{"backdrop-blur":Ie()}],"backdrop-brightness":[{"backdrop-brightness":[p,s,a]}],"backdrop-contrast":[{"backdrop-contrast":[p,s,a]}],"backdrop-grayscale":[{"backdrop-grayscale":["",p,s,a]}],"backdrop-hue-rotate":[{"backdrop-hue-rotate":[p,s,a]}],"backdrop-invert":[{"backdrop-invert":["",p,s,a]}],"backdrop-opacity":[{"backdrop-opacity":[p,s,a]}],"backdrop-saturate":[{"backdrop-saturate":[p,s,a]}],"backdrop-sepia":[{"backdrop-sepia":["",p,s,a]}],"border-collapse":[{border:["collapse","separate"]}],"border-spacing":[{"border-spacing":d()}],"border-spacing-x":[{"border-spacing-x":d()}],"border-spacing-y":[{"border-spacing-y":d()}],"table-layout":[{table:["auto","fixed"]}],caption:[{caption:["top","bottom"]}],transition:[{transition:["","all","colors","opacity","shadow","transform","none",s,a]}],"transition-behavior":[{transition:["normal","discrete"]}],duration:[{duration:[p,"initial",s,a]}],ease:[{ease:["linear","initial",V,s,a]}],delay:[{delay:[p,s,a]}],animate:[{animate:["none",K,s,a]}],backface:[{backface:["hidden","visible"]}],perspective:[{perspective:[k,s,a]}],"perspective-origin":[{"perspective-origin":H()}],rotate:[{rotate:Q()}],"rotate-x":[{"rotate-x":Q()}],"rotate-y":[{"rotate-y":Q()}],"rotate-z":[{"rotate-z":Q()}],scale:[{scale:Y()}],"scale-x":[{"scale-x":Y()}],"scale-y":[{"scale-y":Y()}],"scale-z":[{"scale-z":Y()}],"scale-3d":["scale-3d"],skew:[{skew:be()}],"skew-x":[{"skew-x":be()}],"skew-y":[{"skew-y":be()}],transform:[{transform:[s,a,"","none","gpu","cpu"]}],"transform-origin":[{origin:H()}],"transform-style":[{transform:["3d","flat"]}],translate:[{translate:ee()}],"translate-x":[{"translate-x":ee()}],"translate-y":[{"translate-y":ee()}],"translate-z":[{"translate-z":ee()}],"translate-none":["translate-none"],accent:[{accent:c()}],appearance:[{appearance:["none","auto"]}],"caret-color":[{caret:c()}],"color-scheme":[{scheme:["normal","dark","light","light-dark","only-dark","only-light"]}],cursor:[{cursor:["auto","default","pointer","wait","text","move","help","not-allowed","none","context-menu","progress","cell","crosshair","vertical-text","alias","copy","no-drop","grab","grabbing","all-scroll","col-resize","row-resize","n-resize","e-resize","s-resize","w-resize","ne-resize","nw-resize","se-resize","sw-resize","ew-resize","ns-resize","nesw-resize","nwse-resize","zoom-in","zoom-out",s,a]}],"field-sizing":[{"field-sizing":["fixed","content"]}],"pointer-events":[{"pointer-events":["auto","none"]}],resize:[{resize:["none","","y","x"]}],"scroll-behavior":[{scroll:["auto","smooth"]}],"scroll-m":[{"scroll-m":d()}],"scroll-mx":[{"scroll-mx":d()}],"scroll-my":[{"scroll-my":d()}],"scroll-ms":[{"scroll-ms":d()}],"scroll-me":[{"scroll-me":d()}],"scroll-mt":[{"scroll-mt":d()}],"scroll-mr":[{"scroll-mr":d()}],"scroll-mb":[{"scroll-mb":d()}],"scroll-ml":[{"scroll-ml":d()}],"scroll-p":[{"scroll-p":d()}],"scroll-px":[{"scroll-px":d()}],"scroll-py":[{"scroll-py":d()}],"scroll-ps":[{"scroll-ps":d()}],"scroll-pe":[{"scroll-pe":d()}],"scroll-pt":[{"scroll-pt":d()}],"scroll-pr":[{"scroll-pr":d()}],"scroll-pb":[{"scroll-pb":d()}],"scroll-pl":[{"scroll-pl":d()}],"snap-align":[{snap:["start","end","center","align-none"]}],"snap-stop":[{snap:["normal","always"]}],"snap-type":[{snap:["none","x","y","both"]}],"snap-strictness":[{snap:["mandatory","proximity"]}],touch:[{touch:["auto","none","manipulation"]}],"touch-x":[{"touch-pan":["x","left","right"]}],"touch-y":[{"touch-pan":["y","up","down"]}],"touch-pz":["touch-pinch-zoom"],select:[{select:["none","text","all","auto"]}],"will-change":[{"will-change":["auto","scroll","contents","transform",s,a]}],fill:[{fill:["none",...c()]}],"stroke-w":[{stroke:[p,U,G,fe]}],stroke:[{stroke:["none",...c()]}],"forced-color-adjust":[{"forced-color-adjust":["auto","none"]}]},conflictingClassGroups:{overflow:["overflow-x","overflow-y"],overscroll:["overscroll-x","overscroll-y"],inset:["inset-x","inset-y","start","end","top","right","bottom","left"],"inset-x":["right","left"],"inset-y":["top","bottom"],flex:["basis","grow","shrink"],gap:["gap-x","gap-y"],p:["px","py","ps","pe","pt","pr","pb","pl"],px:["pr","pl"],py:["pt","pb"],m:["mx","my","ms","me","mt","mr","mb","ml"],mx:["mr","ml"],my:["mt","mb"],size:["w","h"],"font-size":["leading"],"fvn-normal":["fvn-ordinal","fvn-slashed-zero","fvn-figure","fvn-spacing","fvn-fraction"],"fvn-ordinal":["fvn-normal"],"fvn-slashed-zero":["fvn-normal"],"fvn-figure":["fvn-normal"],"fvn-spacing":["fvn-normal"],"fvn-fraction":["fvn-normal"],"line-clamp":["display","overflow"],rounded:["rounded-s","rounded-e","rounded-t","rounded-r","rounded-b","rounded-l","rounded-ss","rounded-se","rounded-ee","rounded-es","rounded-tl","rounded-tr","rounded-br","rounded-bl"],"rounded-s":["rounded-ss","rounded-es"],"rounded-e":["rounded-se","rounded-ee"],"rounded-t":["rounded-tl","rounded-tr"],"rounded-r":["rounded-tr","rounded-br"],"rounded-b":["rounded-br","rounded-bl"],"rounded-l":["rounded-tl","rounded-bl"],"border-spacing":["border-spacing-x","border-spacing-y"],"border-w":["border-w-x","border-w-y","border-w-s","border-w-e","border-w-t","border-w-r","border-w-b","border-w-l"],"border-w-x":["border-w-r","border-w-l"],"border-w-y":["border-w-t","border-w-b"],"border-color":["border-color-x","border-color-y","border-color-s","border-color-e","border-color-t","border-color-r","border-color-b","border-color-l"],"border-color-x":["border-color-r","border-color-l"],"border-color-y":["border-color-t","border-color-b"],translate:["translate-x","translate-y","translate-none"],"translate-none":["translate","translate-x","translate-y","translate-z"],"scroll-m":["scroll-mx","scroll-my","scroll-ms","scroll-me","scroll-mt","scroll-mr","scroll-mb","scroll-ml"],"scroll-mx":["scroll-mr","scroll-ml"],"scroll-my":["scroll-mt","scroll-mb"],"scroll-p":["scroll-px","scroll-py","scroll-ps","scroll-pe","scroll-pt","scroll-pr","scroll-pb","scroll-pl"],"scroll-px":["scroll-pr","scroll-pl"],"scroll-py":["scroll-pt","scroll-pb"],touch:["touch-x","touch-y","touch-pz"],"touch-x":["touch"],"touch-y":["touch"],"touch-pz":["touch"]},conflictingClassGroupModifiers:{"font-size":["leading"]},orderSensitiveModifiers:["*","**","after","backdrop","before","details-content","file","first-letter","first-line","marker","placeholder","selection"]}},uo=Ft(co);function mo(...e){return uo(ct(e))}const po=At("inline-flex items-center justify-center gap-2 text-center font-bold leading-5 transition-all duration-150 ease-in whitespace-nowrap rounded-md text-sm focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive",{variants:{variant:{primary:"bg-blue text-white from-blue to-green hover:bg-blue/80",secondary:"bg-white border border-blue hover:bg-hover-blue text-blue rounded-md",delete:"bg-error text-white border border-error hover:bg-error/80 rounded-md",hover:"bg-white text-blue hover:bg-hover-blue rounded-full",outline:"bg-white text-blue rounded-full",alert:"text-error hover:bg-hoverRed"},size:{small:"text-sm px-6 py-2",default:"text-base px-8 py-2",big:"text-lg px-10 py-2"},disabled:{true:"bg-light-grey border border-disabled text-grey cursor-not-allowed pointer-events-none rounded-md",false:""},capitalized:{true:"capitalize",false:"normal-case"}},defaultVariants:{variant:"primary",size:"default",capitalized:!0}});function wt({className:e,variant:o="primary",size:t="default",disabled:r=!1,asChild:n=!1,capitalized:i=!1,...l}){const m=n?zt:"button";return J.jsx(m,{"data-slot":"button",disabled:r,className:mo(po({variant:o,size:t,disabled:r,capitalized:i,className:e})),...l})}wt.__docgenInfo={description:"",methods:[],displayName:"Button",props:{asChild:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"false",computed:!1}},capitalized:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"false",computed:!1}},variant:{defaultValue:{value:'"primary"',computed:!1},required:!1},size:{defaultValue:{value:'"default"',computed:!1},required:!1},disabled:{defaultValue:{value:"false",computed:!1},required:!1}}};/**
 * @license lucide-react v0.503.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const bo=[["path",{d:"M5 12h14",key:"1ays0h"}],["path",{d:"m12 5 7 7-7 7",key:"xquz4c"}]],go=xt("arrow-right",bo),ko={title:"Components/Button",component:wt,tags:["autodocs"],argTypes:{variant:{control:"radio",options:["primary","secondary","delete","hover","outline","alert"]},size:{control:"select",options:["small","default","big"]},disabled:{control:"boolean"}}},re={args:{children:"Primary Button",variant:"primary",onClick:A("clicked")},play:async({canvasElement:e})=>{const t=T(e).getByRole("button",{name:/Primary Button/i});await f(t).toBeInTheDocument(),await f(t).toHaveClass("bg-blue"),await D.click(t)}},ne={args:{variant:"secondary",children:"secondary button",onClick:A("clicked")},play:async({canvasElement:e})=>{const t=T(e).getByRole("button",{name:/secondary button/i});await f(t).toBeInTheDocument(),await f(t).toHaveClass("bg-white"),await D.click(t)}},ae={args:{variant:"delete",children:"delete button",onClick:A("clicked")},play:async({canvasElement:e})=>{const t=T(e).getByRole("button",{name:/delete button/i});await f(t).toBeInTheDocument(),await f(t).toHaveClass("bg-error"),await D.click(t)}},se={args:{variant:"hover",children:"hover button",onClick:A("clicked")},play:async({canvasElement:e})=>{const t=T(e).getByRole("button",{name:/hover button/i});await f(t).toBeInTheDocument(),await f(t).toHaveClass("bg-white"),await D.hover(t)}},ie={args:{size:"big",children:"big button",onClick:A("clicked")},play:async({canvasElement:e})=>{const t=T(e).getByRole("button",{name:/big button/i});await f(t).toBeInTheDocument(),await f(t).toHaveClass("text-lg"),await D.click(t)}},le={args:{disabled:!0,children:"disabled button",onClick:A("clicked")},play:async({canvasElement:e})=>{const t=T(e).getByRole("button",{name:/disabled button/i});await f(t).toBeInTheDocument(),await f(t).toBeDisabled(),await f(t).toHaveClass("bg-light-grey")}},ce={args:{variant:"alert",children:"alert button",onClick:A("clicked")},play:async({canvasElement:e})=>{const t=T(e).getByRole("button",{name:/alert button/i});await f(t).toBeInTheDocument(),await f(t).toHaveClass("text-error"),await D.click(t)}},de={args:{asChild:!0,children:J.jsxs("a",{href:"https://example.com",target:"_blank",rel:"noopener noreferrer",children:["ejemplo ",J.jsx(go,{className:"w-4 h-4"})]}),onClick:A("clicked")},play:async({canvasElement:e})=>{const t=T(e).getByRole("link",{name:/ejemplo/i});await f(t).toBeInTheDocument(),await f(t).toHaveAttribute("href","https://example.com"),await f(t).toHaveAttribute("target","_blank")}},ue={args:{capitalized:!0,children:"texto capitalized",onClick:A("clicked")},play:async({canvasElement:e})=>{const t=T(e).getByRole("button",{name:/texto capitalized/i});await f(t).toBeInTheDocument(),await f(t).toHaveClass("capitalize"),await D.click(t)}};var Ne,Ge,De;re.parameters={...re.parameters,docs:{...(Ne=re.parameters)==null?void 0:Ne.docs,source:{originalSource:`{
  args: {
    children: "Primary Button",
    variant: "primary",
    onClick: action("clicked")
  },
  play: async ({
    canvasElement
  }) => {
    const canvas = within(canvasElement);
    const button = canvas.getByRole("button", {
      name: /Primary Button/i
    });
    await expect(button).toBeInTheDocument();
    await expect(button).toHaveClass("bg-blue");
    await userEvent.click(button);
  }
}`,...(De=(Ge=re.parameters)==null?void 0:Ge.docs)==null?void 0:De.source}}};var _e,He,Oe;ne.parameters={...ne.parameters,docs:{...(_e=ne.parameters)==null?void 0:_e.docs,source:{originalSource:`{
  args: {
    variant: "secondary",
    children: "secondary button",
    onClick: action("clicked")
  },
  play: async ({
    canvasElement
  }) => {
    const canvas = within(canvasElement);
    const button = canvas.getByRole("button", {
      name: /secondary button/i
    });
    await expect(button).toBeInTheDocument();
    await expect(button).toHaveClass("bg-white");
    await userEvent.click(button);
  }
}`,...(Oe=(He=ne.parameters)==null?void 0:He.docs)==null?void 0:Oe.source}}};var Le,We,Fe;ae.parameters={...ae.parameters,docs:{...(Le=ae.parameters)==null?void 0:Le.docs,source:{originalSource:`{
  args: {
    variant: "delete",
    children: "delete button",
    onClick: action("clicked")
  },
  play: async ({
    canvasElement
  }) => {
    const canvas = within(canvasElement);
    const button = canvas.getByRole("button", {
      name: /delete button/i
    });
    await expect(button).toBeInTheDocument();
    await expect(button).toHaveClass("bg-error");
    await userEvent.click(button);
  }
}`,...(Fe=(We=ae.parameters)==null?void 0:We.docs)==null?void 0:Fe.source}}};var $e,qe,Ue;se.parameters={...se.parameters,docs:{...($e=se.parameters)==null?void 0:$e.docs,source:{originalSource:`{
  args: {
    variant: "hover",
    children: "hover button",
    onClick: action("clicked")
  },
  play: async ({
    canvasElement
  }) => {
    const canvas = within(canvasElement);
    const button = canvas.getByRole("button", {
      name: /hover button/i
    });
    await expect(button).toBeInTheDocument();
    await expect(button).toHaveClass("bg-white");
    await userEvent.hover(button);
  }
}`,...(Ue=(qe=se.parameters)==null?void 0:qe.docs)==null?void 0:Ue.source}}};var Je,Ke,Xe;ie.parameters={...ie.parameters,docs:{...(Je=ie.parameters)==null?void 0:Je.docs,source:{originalSource:`{
  args: {
    size: "big",
    children: "big button",
    onClick: action("clicked")
  },
  play: async ({
    canvasElement
  }) => {
    const canvas = within(canvasElement);
    const button = canvas.getByRole("button", {
      name: /big button/i
    });
    await expect(button).toBeInTheDocument();
    await expect(button).toHaveClass("text-lg");
    await userEvent.click(button);
  }
}`,...(Xe=(Ke=ie.parameters)==null?void 0:Ke.docs)==null?void 0:Xe.source}}};var Ze,Qe,Ye;le.parameters={...le.parameters,docs:{...(Ze=le.parameters)==null?void 0:Ze.docs,source:{originalSource:`{
  args: {
    disabled: true,
    children: "disabled button",
    onClick: action("clicked")
  },
  play: async ({
    canvasElement
  }) => {
    const canvas = within(canvasElement);
    const button = canvas.getByRole("button", {
      name: /disabled button/i
    });
    await expect(button).toBeInTheDocument();
    await expect(button).toBeDisabled();
    await expect(button).toHaveClass("bg-light-grey");
  }
}`,...(Ye=(Qe=le.parameters)==null?void 0:Qe.docs)==null?void 0:Ye.source}}};var et,tt,ot;ce.parameters={...ce.parameters,docs:{...(et=ce.parameters)==null?void 0:et.docs,source:{originalSource:`{
  args: {
    variant: "alert",
    children: "alert button",
    onClick: action("clicked")
  },
  play: async ({
    canvasElement
  }) => {
    const canvas = within(canvasElement);
    const button = canvas.getByRole("button", {
      name: /alert button/i
    });
    await expect(button).toBeInTheDocument();
    await expect(button).toHaveClass("text-error");
    await userEvent.click(button);
  }
}`,...(ot=(tt=ce.parameters)==null?void 0:tt.docs)==null?void 0:ot.source}}};var rt,nt,at;de.parameters={...de.parameters,docs:{...(rt=de.parameters)==null?void 0:rt.docs,source:{originalSource:`{
  args: {
    asChild: true,
    children: <a href="https://example.com" target="_blank" rel="noopener noreferrer">
        ejemplo <ArrowRight className="w-4 h-4" />
      </a>,
    onClick: action("clicked")
  },
  play: async ({
    canvasElement
  }) => {
    const canvas = within(canvasElement);
    const link = canvas.getByRole("link", {
      name: /ejemplo/i
    });
    await expect(link).toBeInTheDocument();
    await expect(link).toHaveAttribute("href", "https://example.com");
    await expect(link).toHaveAttribute("target", "_blank");
  }
}`,...(at=(nt=de.parameters)==null?void 0:nt.docs)==null?void 0:at.source}}};var st,it,lt;ue.parameters={...ue.parameters,docs:{...(st=ue.parameters)==null?void 0:st.docs,source:{originalSource:`{
  args: {
    capitalized: true,
    children: "texto capitalized",
    onClick: action("clicked")
  },
  play: async ({
    canvasElement
  }) => {
    const canvas = within(canvasElement);
    const button = canvas.getByRole("button", {
      name: /texto capitalized/i
    });
    await expect(button).toBeInTheDocument();
    await expect(button).toHaveClass("capitalize");
    await userEvent.click(button);
  }
}`,...(lt=(it=ue.parameters)==null?void 0:it.docs)==null?void 0:lt.source}}};const Co=["Primary","Secondary","Delete","Hover","Big","Disabled","Alert","AsChild","Capitalized"];export{ce as Alert,de as AsChild,ie as Big,ue as Capitalized,ae as Delete,le as Disabled,se as Hover,re as Primary,ne as Secondary,Co as __namedExportsOrder,ko as default};
